
source ~/jeremykay/dotfiles/.convox;

alias la='ls -a'
alias zr='cd ~/dev/reverb'
alias l="docker-compose -f $HOME/dev/local/docker-compose.yml"

# Git Aliases
alias gc='git commit'
alias gs='git status'
alias gstsh='git stash'
alias gst='git stash'
alias gsp='git stash pop'
alias gsa='git stash apply'
alias gsh='git show'
alias gshw='git show'
alias gshow='git show'
alias gi='vim .gitignore'
alias gcm='git ci -m'
alias gcim='git ci -m'
alias gci='git ci'
alias gco='git co'
alias gcob='git co -b'
alias gcp='git cp'
alias ga='git add -A'
alias gap='git add -p'
alias guns='git unstage'
alias gunc='git uncommit'
alias gm='git merge'
alias gms='git merge --squash'
alias gam='git amend --reset-author'
alias grv='git remote -v'
alias grr='git remote rm'
alias grad='git remote add'
alias gr='git rebase'
alias gra='git rebase --abort'
alias ggrc='git rebase --continue'
alias gbi='git rebase --interactive'
alias gl='git log'
alias glg='git log'
alias glog='git log'
alias gf='git fetch'
alias gfp='git fetch --prune'
alias gfa='git fetch --all'
alias gfap='git fetch --all --prune'
alias gfch='git fetch'
alias gd='git diff'
alias gb='git branch'
# Staged and cached are the same thing
alias gdc='git diff --cached -w'
alias gds='git diff --staged -w'
alias gpub='grb publish'
alias gtr='grb track'
alias gpl='git pull'
alias gplr='git pull --rebase'
alias gps='git push'
alias gpsh='git push -u origin `git rev-parse --abbrev-ref HEAD`'
alias gnb='git nb' # new branch aka checkout -b
alias grs='git reset'
alias grsh='git reset --hard'
alias gcln='git clean'
alias gclndf='git clean -df'
alias gclndfx='git clean -dfx'
alias gsm='git submodule'
alias gsmi='git submodule init'
alias gsmu='git submodule update'
alias gt='git t'
alias gbg='git bisect good'
alias gbb='git bisect bad'
alias gdmb='git branch --merged | grep -v "\*" | xargs -n 1 git branch -d'



# Add Visual Studio Code (code)
export PATH="\$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin:$PATH"

# Add AWS
export PATH="/usr/local/opt/awscli@1/bin:$PATH"

# GIT FUNCTIONS
git_branch() {
    git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

git_not_staged() {
  local status=$(git status 2> /dev/null)
  if [[ "$status" =~ "Changes not staged for commit" ]]; then
    echo "•"
  else
    echo ""
  fi
}

git_untracked() {
  local status=$(git status 2> /dev/null)
  if [[ "$status" =~ "Untracked files" ]]; then
    echo "•"
  else
    echo ""
  fi
}

git_to_be_committed() {
  local status=$(git status 2> /dev/null)
  if [[ "$status" =~ "Changes to be committed" ]]; then
    echo "•"
  else
    echo ""
  fi
}

# TERMINAL PROMPT
PS1="\[\e[0;95m\]\u\[\e[m\]"    # username
PS1+=" "    # space
PS1+="\[\e[0;92m\]\w\[\e[m\]"    # current directory
PS1+="\[\e[0;36m\]\$(git_branch)\[\e[m\]"    # current branch
PS1+="\[\e[0;33m\]\$(git_untracked)\[\e[m\]"
PS1+="\[\e[0;31m\]\$(git_not_staged)\[\e[m\]"
PS1+="\[\e[0;92m\]\$(git_to_be_committed)\[\e[m\]"
PS1+="$ "    # end prompt
export PS1;
export CLICOL
